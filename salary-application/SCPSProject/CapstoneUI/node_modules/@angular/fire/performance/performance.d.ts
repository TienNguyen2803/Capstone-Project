import { NgZone, ApplicationRef, InjectionToken } from '@angular/core';
import { Observable } from 'rxjs';
import { performance } from 'firebase/app';
import { FirebaseApp } from '@angular/fire';
import * as ɵngcc0 from '@angular/core';
export declare const AUTOMATICALLY_TRACE_CORE_NG_METRICS: InjectionToken<boolean>;
export declare const INSTRUMENTATION_ENABLED: InjectionToken<boolean>;
export declare const DATA_COLLECTION_ENABLED: InjectionToken<boolean>;
export declare type TraceOptions = {
    metrics?: {
        [key: string]: number;
    };
    attributes?: {
        [key: string]: string;
    };
    attribute$?: {
        [key: string]: Observable<string>;
    };
    incrementMetric$?: {
        [key: string]: Observable<number | void | null | undefined>;
    };
    metric$?: {
        [key: string]: Observable<number>;
    };
};
export declare class AngularFirePerformance {
    private zone;
    performance: Observable<performance.Performance>;
    constructor(app: FirebaseApp, automaticallyTraceCoreNgMetrics: boolean | null, instrumentationEnabled: boolean | null, dataCollectionEnabled: boolean | null, appRef: ApplicationRef, zone: NgZone);
    trace$: (name: string, options?: TraceOptions | undefined) => Observable<void>;
    traceUntil: <T = any>(name: string, test: (a: T) => boolean, options?: (TraceOptions & {
        orComplete?: boolean | undefined;
    }) | undefined) => (source$: Observable<T>) => Observable<T>;
    traceWhile: <T = any>(name: string, test: (a: T) => boolean, options?: (TraceOptions & {
        orComplete?: boolean | undefined;
    }) | undefined) => (source$: Observable<T>) => Observable<T>;
    traceUntilComplete: <T = any>(name: string, options?: TraceOptions | undefined) => (source$: Observable<T>) => Observable<T>;
    traceUntilFirst: <T = any>(name: string, options?: TraceOptions | undefined) => (source$: Observable<T>) => Observable<T>;
    trace: <T = any>(name: string, options?: TraceOptions | undefined) => (source$: Observable<T>) => Observable<T>;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularFirePerformance>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AngularFirePerformance>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicGVyZm9ybWFuY2UuZC50cyIsInNvdXJjZXMiOlsicGVyZm9ybWFuY2UuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0NBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBBcHBsaWNhdGlvblJlZiwgSW5qZWN0aW9uVG9rZW4gfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCB7IHBlcmZvcm1hbmNlIH0gZnJvbSAnZmlyZWJhc2UvYXBwJztcbmltcG9ydCB7IEZpcmViYXNlQXBwIH0gZnJvbSAnQGFuZ3VsYXIvZmlyZSc7XG5leHBvcnQgZGVjbGFyZSBjb25zdCBBVVRPTUFUSUNBTExZX1RSQUNFX0NPUkVfTkdfTUVUUklDUzogSW5qZWN0aW9uVG9rZW48Ym9vbGVhbj47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBJTlNUUlVNRU5UQVRJT05fRU5BQkxFRDogSW5qZWN0aW9uVG9rZW48Ym9vbGVhbj47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBEQVRBX0NPTExFQ1RJT05fRU5BQkxFRDogSW5qZWN0aW9uVG9rZW48Ym9vbGVhbj47XG5leHBvcnQgZGVjbGFyZSB0eXBlIFRyYWNlT3B0aW9ucyA9IHtcbiAgICBtZXRyaWNzPzoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBudW1iZXI7XG4gICAgfTtcbiAgICBhdHRyaWJ1dGVzPzoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBzdHJpbmc7XG4gICAgfTtcbiAgICBhdHRyaWJ1dGUkPzoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBPYnNlcnZhYmxlPHN0cmluZz47XG4gICAgfTtcbiAgICBpbmNyZW1lbnRNZXRyaWMkPzoge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBPYnNlcnZhYmxlPG51bWJlciB8IHZvaWQgfCBudWxsIHwgdW5kZWZpbmVkPjtcbiAgICB9O1xuICAgIG1ldHJpYyQ/OiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IE9ic2VydmFibGU8bnVtYmVyPjtcbiAgICB9O1xufTtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEFuZ3VsYXJGaXJlUGVyZm9ybWFuY2Uge1xuICAgIHByaXZhdGUgem9uZTtcbiAgICBwZXJmb3JtYW5jZTogT2JzZXJ2YWJsZTxwZXJmb3JtYW5jZS5QZXJmb3JtYW5jZT47XG4gICAgY29uc3RydWN0b3IoYXBwOiBGaXJlYmFzZUFwcCwgYXV0b21hdGljYWxseVRyYWNlQ29yZU5nTWV0cmljczogYm9vbGVhbiB8IG51bGwsIGluc3RydW1lbnRhdGlvbkVuYWJsZWQ6IGJvb2xlYW4gfCBudWxsLCBkYXRhQ29sbGVjdGlvbkVuYWJsZWQ6IGJvb2xlYW4gfCBudWxsLCBhcHBSZWY6IEFwcGxpY2F0aW9uUmVmLCB6b25lOiBOZ1pvbmUpO1xuICAgIHRyYWNlJDogKG5hbWU6IHN0cmluZywgb3B0aW9ucz86IFRyYWNlT3B0aW9ucyB8IHVuZGVmaW5lZCkgPT4gT2JzZXJ2YWJsZTx2b2lkPjtcbiAgICB0cmFjZVVudGlsOiA8VCA9IGFueT4obmFtZTogc3RyaW5nLCB0ZXN0OiAoYTogVCkgPT4gYm9vbGVhbiwgb3B0aW9ucz86IChUcmFjZU9wdGlvbnMgJiB7XG4gICAgICAgIG9yQ29tcGxldGU/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICAgIH0pIHwgdW5kZWZpbmVkKSA9PiAoc291cmNlJDogT2JzZXJ2YWJsZTxUPikgPT4gT2JzZXJ2YWJsZTxUPjtcbiAgICB0cmFjZVdoaWxlOiA8VCA9IGFueT4obmFtZTogc3RyaW5nLCB0ZXN0OiAoYTogVCkgPT4gYm9vbGVhbiwgb3B0aW9ucz86IChUcmFjZU9wdGlvbnMgJiB7XG4gICAgICAgIG9yQ29tcGxldGU/OiBib29sZWFuIHwgdW5kZWZpbmVkO1xuICAgIH0pIHwgdW5kZWZpbmVkKSA9PiAoc291cmNlJDogT2JzZXJ2YWJsZTxUPikgPT4gT2JzZXJ2YWJsZTxUPjtcbiAgICB0cmFjZVVudGlsQ29tcGxldGU6IDxUID0gYW55PihuYW1lOiBzdHJpbmcsIG9wdGlvbnM/OiBUcmFjZU9wdGlvbnMgfCB1bmRlZmluZWQpID0+IChzb3VyY2UkOiBPYnNlcnZhYmxlPFQ+KSA9PiBPYnNlcnZhYmxlPFQ+O1xuICAgIHRyYWNlVW50aWxGaXJzdDogPFQgPSBhbnk+KG5hbWU6IHN0cmluZywgb3B0aW9ucz86IFRyYWNlT3B0aW9ucyB8IHVuZGVmaW5lZCkgPT4gKHNvdXJjZSQ6IE9ic2VydmFibGU8VD4pID0+IE9ic2VydmFibGU8VD47XG4gICAgdHJhY2U6IDxUID0gYW55PihuYW1lOiBzdHJpbmcsIG9wdGlvbnM/OiBUcmFjZU9wdGlvbnMgfCB1bmRlZmluZWQpID0+IChzb3VyY2UkOiBPYnNlcnZhYmxlPFQ+KSA9PiBPYnNlcnZhYmxlPFQ+O1xufVxuIl19