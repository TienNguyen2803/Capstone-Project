import { NgZone, InjectionToken } from '@angular/core';
import { Observable, OperatorFunction, MonoTypeOperatorFunction } from 'rxjs';
import { FirebaseAppConfig, FirebaseOptions } from '@angular/fire';
import { remoteConfig } from 'firebase/app';
import * as ɵngcc0 from '@angular/core';
export interface ConfigTemplate {
    [key: string]: string | number | boolean;
}
export declare const SETTINGS: InjectionToken<remoteConfig.Settings>;
export declare const DEFAULTS: InjectionToken<ConfigTemplate>;
declare type RemoteConfigProxy = {
    activate: () => Promise<boolean>;
    ensureInitialized: () => Promise<void>;
    fetch: () => Promise<void>;
    fetchAndActivate: () => Promise<boolean>;
    getAll: () => Promise<{
        [key: string]: remoteConfig.Value;
    }>;
    getBoolean: (key: string) => Promise<boolean>;
    getNumber: (key: string) => Promise<number>;
    getString: (key: string) => Promise<string>;
    getValue: (key: string) => Promise<remoteConfig.Value>;
    setLogLevel: (logLevel: remoteConfig.LogLevel) => Promise<void>;
    settings: Promise<remoteConfig.Settings>;
    defaultConfig: Promise<{
        [key: string]: string | number | boolean;
    }>;
    fetchTimeMillis: Promise<number>;
    lastFetchStatus: Promise<remoteConfig.FetchStatus>;
};
export interface AngularFireRemoteConfig extends RemoteConfigProxy {
}
export declare class Value implements Partial<remoteConfig.Value> {
    _source: remoteConfig.ValueSource;
    _value: string;
    asBoolean(): boolean;
    asString(): string;
    asNumber(): number;
    getSource(): remoteConfig.ValueSource;
    constructor(_source: remoteConfig.ValueSource, _value: string);
}
export declare class Parameter extends Value {
    key: string;
    fetchTimeMillis: number;
    constructor(key: string, fetchTimeMillis: number, source: remoteConfig.ValueSource, value: string);
}
export declare const filterRemote: () => MonoTypeOperatorFunction<Parameter | Parameter[]>;
export declare const filterFresh: (howRecentInMillis: number) => MonoTypeOperatorFunction<Parameter | Parameter[]>;
export declare class AngularFireRemoteConfig {
    private zone;
    readonly changes: Observable<Parameter>;
    readonly parameters: Observable<Parameter[]>;
    readonly numbers: Observable<{
        [key: string]: number | undefined;
    }> & {
        [key: string]: Observable<number>;
    };
    readonly booleans: Observable<{
        [key: string]: boolean | undefined;
    }> & {
        [key: string]: Observable<boolean>;
    };
    readonly strings: Observable<{
        [key: string]: string | undefined;
    }> & {
        [key: string]: Observable<string | undefined>;
    };
    constructor(options: FirebaseOptions, nameOrConfig: string | FirebaseAppConfig | null | undefined, settings: remoteConfig.Settings | null, defaultConfig: ConfigTemplate | null, zone: NgZone);
    static ɵfac: ɵngcc0.ɵɵFactoryDef<AngularFireRemoteConfig>;
    static ɵprov: ɵngcc0.ɵɵInjectableDef<AngularFireRemoteConfig>;
}
export declare const budget: <T>(interval: number) => MonoTypeOperatorFunction<T>;
export declare function scanToObject(): OperatorFunction<Parameter, {
    [key: string]: string | undefined;
}>;
export declare function scanToObject(to: 'numbers'): OperatorFunction<Parameter, {
    [key: string]: number | undefined;
}>;
export declare function scanToObject(to: 'booleans'): OperatorFunction<Parameter, {
    [key: string]: boolean | undefined;
}>;
export declare function scanToObject(to: 'strings'): OperatorFunction<Parameter, {
    [key: string]: string | undefined;
}>;
export declare function scanToObject<T extends ConfigTemplate>(template: T): OperatorFunction<Parameter, T & {
    [key: string]: string | undefined;
}>;
export declare function mapToObject(): OperatorFunction<Parameter[], {
    [key: string]: string | undefined;
}>;
export declare function mapToObject(to: 'numbers'): OperatorFunction<Parameter[], {
    [key: string]: number | undefined;
}>;
export declare function mapToObject(to: 'booleans'): OperatorFunction<Parameter[], {
    [key: string]: boolean | undefined;
}>;
export declare function mapToObject(to: 'strings'): OperatorFunction<Parameter[], {
    [key: string]: string | undefined;
}>;
export declare function mapToObject<T extends ConfigTemplate>(template: T): OperatorFunction<Parameter[], T & {
    [key: string]: string | undefined;
}>;
export {};

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVtb3RlLWNvbmZpZy5kLnRzIiwic291cmNlcyI6WyJyZW1vdGUtY29uZmlnLmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0FBSUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBK0RBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdab25lLCBJbmplY3Rpb25Ub2tlbiB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgT3BlcmF0b3JGdW5jdGlvbiwgTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uIH0gZnJvbSAncnhqcyc7XG5pbXBvcnQgeyBGaXJlYmFzZUFwcENvbmZpZywgRmlyZWJhc2VPcHRpb25zIH0gZnJvbSAnQGFuZ3VsYXIvZmlyZSc7XG5pbXBvcnQgeyByZW1vdGVDb25maWcgfSBmcm9tICdmaXJlYmFzZS9hcHAnO1xuZXhwb3J0IGludGVyZmFjZSBDb25maWdUZW1wbGF0ZSB7XG4gICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgbnVtYmVyIHwgYm9vbGVhbjtcbn1cbmV4cG9ydCBkZWNsYXJlIGNvbnN0IFNFVFRJTkdTOiBJbmplY3Rpb25Ub2tlbjxyZW1vdGVDb25maWcuU2V0dGluZ3M+O1xuZXhwb3J0IGRlY2xhcmUgY29uc3QgREVGQVVMVFM6IEluamVjdGlvblRva2VuPENvbmZpZ1RlbXBsYXRlPjtcbmRlY2xhcmUgdHlwZSBSZW1vdGVDb25maWdQcm94eSA9IHtcbiAgICBhY3RpdmF0ZTogKCkgPT4gUHJvbWlzZTxib29sZWFuPjtcbiAgICBlbnN1cmVJbml0aWFsaXplZDogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbiAgICBmZXRjaDogKCkgPT4gUHJvbWlzZTx2b2lkPjtcbiAgICBmZXRjaEFuZEFjdGl2YXRlOiAoKSA9PiBQcm9taXNlPGJvb2xlYW4+O1xuICAgIGdldEFsbDogKCkgPT4gUHJvbWlzZTx7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IHJlbW90ZUNvbmZpZy5WYWx1ZTtcbiAgICB9PjtcbiAgICBnZXRCb29sZWFuOiAoa2V5OiBzdHJpbmcpID0+IFByb21pc2U8Ym9vbGVhbj47XG4gICAgZ2V0TnVtYmVyOiAoa2V5OiBzdHJpbmcpID0+IFByb21pc2U8bnVtYmVyPjtcbiAgICBnZXRTdHJpbmc6IChrZXk6IHN0cmluZykgPT4gUHJvbWlzZTxzdHJpbmc+O1xuICAgIGdldFZhbHVlOiAoa2V5OiBzdHJpbmcpID0+IFByb21pc2U8cmVtb3RlQ29uZmlnLlZhbHVlPjtcbiAgICBzZXRMb2dMZXZlbDogKGxvZ0xldmVsOiByZW1vdGVDb25maWcuTG9nTGV2ZWwpID0+IFByb21pc2U8dm9pZD47XG4gICAgc2V0dGluZ3M6IFByb21pc2U8cmVtb3RlQ29uZmlnLlNldHRpbmdzPjtcbiAgICBkZWZhdWx0Q29uZmlnOiBQcm9taXNlPHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgbnVtYmVyIHwgYm9vbGVhbjtcbiAgICB9PjtcbiAgICBmZXRjaFRpbWVNaWxsaXM6IFByb21pc2U8bnVtYmVyPjtcbiAgICBsYXN0RmV0Y2hTdGF0dXM6IFByb21pc2U8cmVtb3RlQ29uZmlnLkZldGNoU3RhdHVzPjtcbn07XG5leHBvcnQgaW50ZXJmYWNlIEFuZ3VsYXJGaXJlUmVtb3RlQ29uZmlnIGV4dGVuZHMgUmVtb3RlQ29uZmlnUHJveHkge1xufVxuZXhwb3J0IGRlY2xhcmUgY2xhc3MgVmFsdWUgaW1wbGVtZW50cyBQYXJ0aWFsPHJlbW90ZUNvbmZpZy5WYWx1ZT4ge1xuICAgIF9zb3VyY2U6IHJlbW90ZUNvbmZpZy5WYWx1ZVNvdXJjZTtcbiAgICBfdmFsdWU6IHN0cmluZztcbiAgICBhc0Jvb2xlYW4oKTogYm9vbGVhbjtcbiAgICBhc1N0cmluZygpOiBzdHJpbmc7XG4gICAgYXNOdW1iZXIoKTogbnVtYmVyO1xuICAgIGdldFNvdXJjZSgpOiByZW1vdGVDb25maWcuVmFsdWVTb3VyY2U7XG4gICAgY29uc3RydWN0b3IoX3NvdXJjZTogcmVtb3RlQ29uZmlnLlZhbHVlU291cmNlLCBfdmFsdWU6IHN0cmluZyk7XG59XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBQYXJhbWV0ZXIgZXh0ZW5kcyBWYWx1ZSB7XG4gICAga2V5OiBzdHJpbmc7XG4gICAgZmV0Y2hUaW1lTWlsbGlzOiBudW1iZXI7XG4gICAgY29uc3RydWN0b3Ioa2V5OiBzdHJpbmcsIGZldGNoVGltZU1pbGxpczogbnVtYmVyLCBzb3VyY2U6IHJlbW90ZUNvbmZpZy5WYWx1ZVNvdXJjZSwgdmFsdWU6IHN0cmluZyk7XG59XG5leHBvcnQgZGVjbGFyZSBjb25zdCBmaWx0ZXJSZW1vdGU6ICgpID0+IE1vbm9UeXBlT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXIgfCBQYXJhbWV0ZXJbXT47XG5leHBvcnQgZGVjbGFyZSBjb25zdCBmaWx0ZXJGcmVzaDogKGhvd1JlY2VudEluTWlsbGlzOiBudW1iZXIpID0+IE1vbm9UeXBlT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXIgfCBQYXJhbWV0ZXJbXT47XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBBbmd1bGFyRmlyZVJlbW90ZUNvbmZpZyB7XG4gICAgcHJpdmF0ZSB6b25lO1xuICAgIHJlYWRvbmx5IGNoYW5nZXM6IE9ic2VydmFibGU8UGFyYW1ldGVyPjtcbiAgICByZWFkb25seSBwYXJhbWV0ZXJzOiBPYnNlcnZhYmxlPFBhcmFtZXRlcltdPjtcbiAgICByZWFkb25seSBudW1iZXJzOiBPYnNlcnZhYmxlPHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogbnVtYmVyIHwgdW5kZWZpbmVkO1xuICAgIH0+ICYge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBPYnNlcnZhYmxlPG51bWJlcj47XG4gICAgfTtcbiAgICByZWFkb25seSBib29sZWFuczogT2JzZXJ2YWJsZTx7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG4gICAgfT4gJiB7XG4gICAgICAgIFtrZXk6IHN0cmluZ106IE9ic2VydmFibGU8Ym9vbGVhbj47XG4gICAgfTtcbiAgICByZWFkb25seSBzdHJpbmdzOiBPYnNlcnZhYmxlPHtcbiAgICAgICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgdW5kZWZpbmVkO1xuICAgIH0+ICYge1xuICAgICAgICBba2V5OiBzdHJpbmddOiBPYnNlcnZhYmxlPHN0cmluZyB8IHVuZGVmaW5lZD47XG4gICAgfTtcbiAgICBjb25zdHJ1Y3RvcihvcHRpb25zOiBGaXJlYmFzZU9wdGlvbnMsIG5hbWVPckNvbmZpZzogc3RyaW5nIHwgRmlyZWJhc2VBcHBDb25maWcgfCBudWxsIHwgdW5kZWZpbmVkLCBzZXR0aW5nczogcmVtb3RlQ29uZmlnLlNldHRpbmdzIHwgbnVsbCwgZGVmYXVsdENvbmZpZzogQ29uZmlnVGVtcGxhdGUgfCBudWxsLCB6b25lOiBOZ1pvbmUpO1xufVxuZXhwb3J0IGRlY2xhcmUgY29uc3QgYnVkZ2V0OiA8VD4oaW50ZXJ2YWw6IG51bWJlcikgPT4gTW9ub1R5cGVPcGVyYXRvckZ1bmN0aW9uPFQ+O1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gc2NhblRvT2JqZWN0KCk6IE9wZXJhdG9yRnVuY3Rpb248UGFyYW1ldGVyLCB7XG4gICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgdW5kZWZpbmVkO1xufT47XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBzY2FuVG9PYmplY3QodG86ICdudW1iZXJzJyk6IE9wZXJhdG9yRnVuY3Rpb248UGFyYW1ldGVyLCB7XG4gICAgW2tleTogc3RyaW5nXTogbnVtYmVyIHwgdW5kZWZpbmVkO1xufT47XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBzY2FuVG9PYmplY3QodG86ICdib29sZWFucycpOiBPcGVyYXRvckZ1bmN0aW9uPFBhcmFtZXRlciwge1xuICAgIFtrZXk6IHN0cmluZ106IGJvb2xlYW4gfCB1bmRlZmluZWQ7XG59PjtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIHNjYW5Ub09iamVjdCh0bzogJ3N0cmluZ3MnKTogT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXIsIHtcbiAgICBba2V5OiBzdHJpbmddOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59PjtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIHNjYW5Ub09iamVjdDxUIGV4dGVuZHMgQ29uZmlnVGVtcGxhdGU+KHRlbXBsYXRlOiBUKTogT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXIsIFQgJiB7XG4gICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgdW5kZWZpbmVkO1xufT47XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBtYXBUb09iamVjdCgpOiBPcGVyYXRvckZ1bmN0aW9uPFBhcmFtZXRlcltdLCB7XG4gICAgW2tleTogc3RyaW5nXTogc3RyaW5nIHwgdW5kZWZpbmVkO1xufT47XG5leHBvcnQgZGVjbGFyZSBmdW5jdGlvbiBtYXBUb09iamVjdCh0bzogJ251bWJlcnMnKTogT3BlcmF0b3JGdW5jdGlvbjxQYXJhbWV0ZXJbXSwge1xuICAgIFtrZXk6IHN0cmluZ106IG51bWJlciB8IHVuZGVmaW5lZDtcbn0+O1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gbWFwVG9PYmplY3QodG86ICdib29sZWFucycpOiBPcGVyYXRvckZ1bmN0aW9uPFBhcmFtZXRlcltdLCB7XG4gICAgW2tleTogc3RyaW5nXTogYm9vbGVhbiB8IHVuZGVmaW5lZDtcbn0+O1xuZXhwb3J0IGRlY2xhcmUgZnVuY3Rpb24gbWFwVG9PYmplY3QodG86ICdzdHJpbmdzJyk6IE9wZXJhdG9yRnVuY3Rpb248UGFyYW1ldGVyW10sIHtcbiAgICBba2V5OiBzdHJpbmddOiBzdHJpbmcgfCB1bmRlZmluZWQ7XG59PjtcbmV4cG9ydCBkZWNsYXJlIGZ1bmN0aW9uIG1hcFRvT2JqZWN0PFQgZXh0ZW5kcyBDb25maWdUZW1wbGF0ZT4odGVtcGxhdGU6IFQpOiBPcGVyYXRvckZ1bmN0aW9uPFBhcmFtZXRlcltdLCBUICYge1xuICAgIFtrZXk6IHN0cmluZ106IHN0cmluZyB8IHVuZGVmaW5lZDtcbn0+O1xuZXhwb3J0IHt9O1xuIl19