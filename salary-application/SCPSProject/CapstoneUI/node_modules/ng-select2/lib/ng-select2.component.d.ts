import { AfterViewInit, DoCheck, ElementRef, EventEmitter, NgZone, OnChanges, OnDestroy, OnInit, Renderer2, SimpleChanges } from '@angular/core';
import { ControlValueAccessor } from '@angular/forms';
import { Select2OptionData } from './ng-select2.interface';
import { Options } from 'select2';
import * as ɵngcc0 from '@angular/core';
export declare class NgSelect2Component implements AfterViewInit, OnChanges, OnDestroy, OnInit, DoCheck, ControlValueAccessor {
    private renderer;
    zone: NgZone;
    _element: ElementRef;
    selector: ElementRef;
    data: Array<Select2OptionData>;
    placeholder: string;
    dropdownParent: string;
    allowClear: boolean;
    value: string | string[];
    width: string;
    disabled: boolean;
    options: Options;
    valueChanged: EventEmitter<string | string[]>;
    private element;
    private check;
    constructor(renderer: Renderer2, zone: NgZone, _element: ElementRef);
    ngDoCheck(): void;
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    ngAfterViewInit(): void;
    ngOnDestroy(): void;
    private initPlugin;
    private setElementValue;
    writeValue(value: any): void;
    propagateChange: (value: string | string[]) => void;
    registerOnChange(fn: any): void;
    registerOnTouched(): void;
    setDisabledState(isDisabled: boolean): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NgSelect2Component>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NgSelect2Component, "ng-select2", never, {
    "placeholder": "placeholder";
    "dropdownParent": "dropdownParent";
    "allowClear": "allowClear";
    "disabled": "disabled";
    "value": "value";
    "data": "data";
    "width": "width";
    "options": "options";
}, {
    "valueChanged": "valueChanged";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctc2VsZWN0Mi5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsibmctc2VsZWN0Mi5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7QUFJQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNkJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQWZ0ZXJWaWV3SW5pdCwgRG9DaGVjaywgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBOZ1pvbmUsIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDb250cm9sVmFsdWVBY2Nlc3NvciB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgU2VsZWN0Mk9wdGlvbkRhdGEgfSBmcm9tICcuL25nLXNlbGVjdDIuaW50ZXJmYWNlJztcclxuaW1wb3J0IHsgT3B0aW9ucyB9IGZyb20gJ3NlbGVjdDInO1xyXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOZ1NlbGVjdDJDb21wb25lbnQgaW1wbGVtZW50cyBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgT25Jbml0LCBEb0NoZWNrLCBDb250cm9sVmFsdWVBY2Nlc3NvciB7XHJcbiAgICBwcml2YXRlIHJlbmRlcmVyO1xyXG4gICAgem9uZTogTmdab25lO1xyXG4gICAgX2VsZW1lbnQ6IEVsZW1lbnRSZWY7XHJcbiAgICBzZWxlY3RvcjogRWxlbWVudFJlZjtcclxuICAgIGRhdGE6IEFycmF5PFNlbGVjdDJPcHRpb25EYXRhPjtcclxuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XHJcbiAgICBkcm9wZG93blBhcmVudDogc3RyaW5nO1xyXG4gICAgYWxsb3dDbGVhcjogYm9vbGVhbjtcclxuICAgIHZhbHVlOiBzdHJpbmcgfCBzdHJpbmdbXTtcclxuICAgIHdpZHRoOiBzdHJpbmc7XHJcbiAgICBkaXNhYmxlZDogYm9vbGVhbjtcclxuICAgIG9wdGlvbnM6IE9wdGlvbnM7XHJcbiAgICB2YWx1ZUNoYW5nZWQ6IEV2ZW50RW1pdHRlcjxzdHJpbmcgfCBzdHJpbmdbXT47XHJcbiAgICBwcml2YXRlIGVsZW1lbnQ7XHJcbiAgICBwcml2YXRlIGNoZWNrO1xyXG4gICAgY29uc3RydWN0b3IocmVuZGVyZXI6IFJlbmRlcmVyMiwgem9uZTogTmdab25lLCBfZWxlbWVudDogRWxlbWVudFJlZik7XHJcbiAgICBuZ0RvQ2hlY2soKTogdm9pZDtcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKTogdm9pZDtcclxuICAgIG5nQWZ0ZXJWaWV3SW5pdCgpOiB2b2lkO1xyXG4gICAgbmdPbkRlc3Ryb3koKTogdm9pZDtcclxuICAgIHByaXZhdGUgaW5pdFBsdWdpbjtcclxuICAgIHByaXZhdGUgc2V0RWxlbWVudFZhbHVlO1xyXG4gICAgd3JpdGVWYWx1ZSh2YWx1ZTogYW55KTogdm9pZDtcclxuICAgIHByb3BhZ2F0ZUNoYW5nZTogKHZhbHVlOiBzdHJpbmcgfCBzdHJpbmdbXSkgPT4gdm9pZDtcclxuICAgIHJlZ2lzdGVyT25DaGFuZ2UoZm46IGFueSk6IHZvaWQ7XHJcbiAgICByZWdpc3Rlck9uVG91Y2hlZCgpOiB2b2lkO1xyXG4gICAgc2V0RGlzYWJsZWRTdGF0ZShpc0Rpc2FibGVkOiBib29sZWFuKTogdm9pZDtcclxufVxyXG4iXX0=