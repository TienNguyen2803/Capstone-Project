import { OnInit, ElementRef } from '@angular/core';
import { TXSettings } from "./tx-settings";
import * as ɵngcc0 from '@angular/core';
export declare class DocumentEditorComponent implements OnInit {
    private hostElement;
    containerDiv: ElementRef;
    private connectionID;
    constructor(hostElement: ElementRef);
    private static readonly DefaultSettings;
    width: string;
    height: string;
    documentTargetMarkers: boolean;
    backColor: string;
    statusBarColor: string;
    editMode: string;
    contextMenusEnabled: boolean;
    saveDocumentQuestionDialogEnabled: boolean;
    tableGridLines: boolean;
    textFrameMarkerLines: boolean;
    controlChars: boolean;
    textFieldsEditable: boolean;
    formattingPrinter: string;
    culture: string;
    uiCulture: string;
    userNames: string[];
    reconnectTimeout: number;
    webSocketURL: string;
    ngOnInit(): void;
    readonly settings: TXSettings;
    private static readonly NO_CONFLICT_JS;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<DocumentEditorComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<DocumentEditorComponent, "tx-document-editor", never, {
    "documentTargetMarkers": "documentTargetMarkers";
    "backColor": "backColor";
    "statusBarColor": "statusBarColor";
    "editMode": "editMode";
    "contextMenusEnabled": "contextMenusEnabled";
    "saveDocumentQuestionDialogEnabled": "saveDocumentQuestionDialogEnabled";
    "tableGridLines": "tableGridLines";
    "textFrameMarkerLines": "textFrameMarkerLines";
    "controlChars": "controlChars";
    "textFieldsEditable": "textFieldsEditable";
    "formattingPrinter": "formattingPrinter";
    "culture": "culture";
    "uiCulture": "uiCulture";
    "userNames": "userNames";
    "reconnectTimeout": "reconnectTimeout";
    "webSocketURL": "webSocketURL";
    "width": "width";
    "height": "height";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZG9jdW1lbnQtZWRpdG9yLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJkb2N1bWVudC1lZGl0b3IuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUEyQkEiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkluaXQsIEVsZW1lbnRSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgVFhTZXR0aW5ncyB9IGZyb20gXCIuL3R4LXNldHRpbmdzXCI7XHJcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIERvY3VtZW50RWRpdG9yQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICAgIHByaXZhdGUgaG9zdEVsZW1lbnQ7XHJcbiAgICBjb250YWluZXJEaXY6IEVsZW1lbnRSZWY7XHJcbiAgICBwcml2YXRlIGNvbm5lY3Rpb25JRDtcclxuICAgIGNvbnN0cnVjdG9yKGhvc3RFbGVtZW50OiBFbGVtZW50UmVmKTtcclxuICAgIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IERlZmF1bHRTZXR0aW5ncztcclxuICAgIHdpZHRoOiBzdHJpbmc7XHJcbiAgICBoZWlnaHQ6IHN0cmluZztcclxuICAgIGRvY3VtZW50VGFyZ2V0TWFya2VyczogYm9vbGVhbjtcclxuICAgIGJhY2tDb2xvcjogc3RyaW5nO1xyXG4gICAgc3RhdHVzQmFyQ29sb3I6IHN0cmluZztcclxuICAgIGVkaXRNb2RlOiBzdHJpbmc7XHJcbiAgICBjb250ZXh0TWVudXNFbmFibGVkOiBib29sZWFuO1xyXG4gICAgc2F2ZURvY3VtZW50UXVlc3Rpb25EaWFsb2dFbmFibGVkOiBib29sZWFuO1xyXG4gICAgdGFibGVHcmlkTGluZXM6IGJvb2xlYW47XHJcbiAgICB0ZXh0RnJhbWVNYXJrZXJMaW5lczogYm9vbGVhbjtcclxuICAgIGNvbnRyb2xDaGFyczogYm9vbGVhbjtcclxuICAgIHRleHRGaWVsZHNFZGl0YWJsZTogYm9vbGVhbjtcclxuICAgIGZvcm1hdHRpbmdQcmludGVyOiBzdHJpbmc7XHJcbiAgICBjdWx0dXJlOiBzdHJpbmc7XHJcbiAgICB1aUN1bHR1cmU6IHN0cmluZztcclxuICAgIHVzZXJOYW1lczogc3RyaW5nW107XHJcbiAgICByZWNvbm5lY3RUaW1lb3V0OiBudW1iZXI7XHJcbiAgICB3ZWJTb2NrZXRVUkw6IHN0cmluZztcclxuICAgIG5nT25Jbml0KCk6IHZvaWQ7XHJcbiAgICByZWFkb25seSBzZXR0aW5nczogVFhTZXR0aW5ncztcclxuICAgIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IE5PX0NPTkZMSUNUX0pTO1xyXG59XHJcbiJdfQ==